setwd("~/methal/methalV1/Rstylo/data4r")
library(stylo)
# load corpus
primary.raw.corpus.bas <- load.corpus(files = "all", corpus.dir = "merge_bas", encoding = "UTF-8")
secondary.raw.corpus.haut <- load.corpus(files = "all", corpus.dir = "merge_haut", encoding = "UTF-8")
# tokenizer
primary.tokenized.corpus.bas <- txt.to.words(primary.raw.corpus.bas, splitting.rule="[[:space:]]+", preserve.case = TRUE)
secondary.tokenized.corpus.haut <- txt.to.words(secondary.raw.corpus.haut, splitting.rule="[[:space:]]+", preserve.case = TRUE)
# contrastive analysis
bas.corpus = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
primary.tokenized.corpus.bas
# contrastive analysis
bas.corpus = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
setwd("~/methal/methalV1/Rstylo/data4r")
library(stylo)
# load corpus
primary.raw.corpus.bas <- load.corpus(files = "merge_bas-rhin.txt", corpus.dir = "merge_bas", encoding = "UTF-8")
secondary.raw.corpus.haut <- load.corpus(files = "merge_haut-rhin.txt", corpus.dir = "merge_haut", encoding = "UTF-8")
# load corpus
primary.raw.corpus.bas <- load.corpus(files = "merge_bas-rhin.txt", corpus.dir = "merge_bas", encoding = "UTF-8")
# load corpus
primary.raw.corpus.bas <- load.corpus(files = "merge_bas-rhin.txt", corpus.dir = "merge_bas", encoding = "UTF-8")
secondary.raw.corpus.haut <- load.corpus(files = "merge_haut-rhin.txt", corpus.dir = "merge_haut", encoding = "UTF-8")
# tokenizer
primary.tokenized.corpus.bas <- txt.to.words(primary.raw.corpus.bas, splitting.rule="[[:space:]]+", preserve.case = TRUE)
secondary.tokenized.corpus.haut <- txt.to.words(secondary.raw.corpus.haut, splitting.rule="[[:space:]]+", preserve.case = TRUE)
setwd("~/methal/methalV1/Rstylo/data4r")
library(stylo)
# load corpus
primary.raw.corpus.bas <- load.corpus(files = "merge_bas-rhin.txt", corpus.dir = "merge_bas", encoding = "UTF-8")
secondary.raw.corpus.haut <- load.corpus(files = "merge_haut-rhin.txt", corpus.dir = "merge_haut", encoding = "UTF-8")
# tokenizer
primary.tokenized.corpus.bas <- txt.to.words(primary.raw.corpus.bas, splitting.rule="[[:space:]]+", preserve.case = TRUE)
secondary.tokenized.corpus.haut <- txt.to.words(secondary.raw.corpus.haut, splitting.rule="[[:space:]]+", preserve.case = TRUE)
# contrastive analysis
bas.corpus = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
# load corpus
primary.raw.corpus.bas <- load.corpus(files = "merge_bas-rhin.txt", corpus.dir = ".", encoding = "UTF-8")
secondary.raw.corpus.haut <- load.corpus(files = "merge_haut-rhin.txt", corpus.dir = ".", encoding = "UTF-8")
primary.raw.corpus.bas
secondary.raw.corpus.haut <- load.corpus(files = "merge_haut-rhin.txt", corpus.dir = ".", encoding = "UTF-8")
# tokenizer
primary.tokenized.corpus.bas <- txt.to.words(primary.raw.corpus.bas, splitting.rule="[[:space:]]+", preserve.case = TRUE)
secondary.tokenized.corpus.haut <- txt.to.words(secondary.raw.corpus.haut, splitting.rule="[[:space:]]+", preserve.case = TRUE)
# contrastive analysis
bas.corpus = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
setwd("~/methal/methalV1/Rstylo/data4r")
library(stylo)
# load corpus
primary.raw.corpus.bas <- load.corpus(files = "all", corpus.dir = "bas-rhin", encoding = "UTF-8")
secondary.raw.corpus.haut <- load.corpus(files = "all", corpus.dir = "haut-rhin", encoding = "UTF-8")
# tokenizer
primary.tokenized.corpus.bas <- txt.to.words(primary.raw.corpus.bas, splitting.rule="[[:space:]]+", preserve.case = TRUE)
secondary.tokenized.corpus.haut <- txt.to.words(secondary.raw.corpus.haut, splitting.rule="[[:space:]]+", preserve.case = TRUE)
# contrastive analysis
bas.corpus = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
setwd("~/methal/methalV1/Rstylo/data4r")
library(stylo)
# load corpus
primary.raw.corpus.bas <- load.corpus(files = "all", corpus.dir = "auteurs/lustig", encoding = "UTF-8")
secondary.raw.corpus.haut <- load.corpus(files = "kettner-uff-dr-hochzittsreis.txt", corpus.dir = "auteurs", encoding = "UTF-8")
# tokenizer
primary.tokenized.corpus.bas <- txt.to.words(primary.raw.corpus.bas, splitting.rule="[[:space:]]+", preserve.case = TRUE)
secondary.tokenized.corpus.haut <- txt.to.words(secondary.raw.corpus.haut, splitting.rule="[[:space:]]+", preserve.case = TRUE)
# contrastive analysis
lustig.corpus = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
secondary.tokenized.corpus.haut
length(secondary.tokenized.corpus.haut)
length(secondary.tokenized.corpus.haut[0])
# contrastive analysis
lustig.corpus = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
setwd("~/methal/methalV1/Rstylo/data4r")
library(stylo)
# load corpus
primary.raw.corpus.bas <- load.corpus(files = "all", corpus.dir = "auteurs/lustig", encoding = "UTF-8")
secondary.raw.corpus.haut <- load.corpus(files = "all", corpus.dir = "auteurs/autres", encoding = "UTF-8")
# tokenizer
primary.tokenized.corpus.bas <- txt.to.words(primary.raw.corpus.bas, splitting.rule="[[:space:]]+", preserve.case = TRUE)
secondary.tokenized.corpus.haut <- txt.to.words(secondary.raw.corpus.haut, splitting.rule="[[:space:]]+", preserve.case = TRUE)
secondary.tokenized.corpus.haut
primary.tokenized.corpus.bas
# contrastive analysis
lustig.corpus = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
setwd("~/methal/methalV1/Rstylo/data4r/Lustig")
library(stylo)
# load corpus
primary.raw.corpus.bas <- load.corpus(files = "all", corpus.dir = "lustig", encoding = "UTF-8")
secondary.raw.corpus.haut <- load.corpus(files = "all", corpus.dir = "autres", encoding = "UTF-8")
# tokenizer
primary.tokenized.corpus.bas <- txt.to.words(primary.raw.corpus.bas, splitting.rule="[[:space:]]+", preserve.case = TRUE)
secondary.tokenized.corpus.haut <- txt.to.words(secondary.raw.corpus.haut, splitting.rule="[[:space:]]+", preserve.case = TRUE)
# contrastive analysis
lustig.corpus = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
setwd("~/methal/methalV1/Rstylo/data4r/Kettner")
library(stylo)
# load corpus
primary.raw.corpus.bas <- load.corpus(files = "kettner-uff-dr-hochzittsreis.txt", corpus.dir = ".", encoding = "UTF-8")
primary.raw.corpus.bas
# load corpus
primary.raw.corpus.bas <- load.corpus(files = c("kettner-uff-dr-hochzittsreis.txt"), corpus.dir = ".", encoding = "UTF-8")
primary.raw.corpus.bas
setwd("~/methal/methalV1/Rstylo/data4r/Kettner")
library(stylo)
# load corpus
primary.raw.corpus.bas <- load.corpus(files = c("kettner-uff-dr-hochzittsreis.txt"), corpus.dir = ".", encoding = "UTF-8")
secondary.raw.corpus.haut <- load.corpus(files = "all", corpus.dir = "autres", encoding = "UTF-8")
secondary.raw.corpus.haut
# tokenizer
primary.tokenized.corpus.bas <- txt.to.words(primary.raw.corpus.bas, splitting.rule="[[:space:]]+", preserve.case = TRUE)
primary.tokenized.corpus.bas
# tokenizer
primary.tokenized.corpus.bas <- txt.to.words(primary.raw.corpus.bas, splitting.rule="[[:space:]]+", preserve.case = TRUE)
secondary.tokenized.corpus.haut <- txt.to.words(secondary.raw.corpus.haut, splitting.rule="[[:space:]]+", preserve.case = TRUE)
# contrastive analysis
kettner = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
setwd("~/methal/methalV1/Rstylo/data4r/Clemens")
library(stylo)
# load corpus
primary.raw.corpus.bas <- load.corpus(files = "all", corpus.dir = "clemens", encoding = "UTF-8")
secondary.raw.corpus.haut <- load.corpus(files = "all", corpus.dir = "autres", encoding = "UTF-8")
primary.raw.corpus.bas
secondary.raw.corpus.haut
# tokenizer
primary.tokenized.corpus.bas <- txt.to.words(primary.raw.corpus.bas, splitting.rule="[[:space:]]+", preserve.case = TRUE)
secondary.tokenized.corpus.haut <- txt.to.words(secondary.raw.corpus.haut, splitting.rule="[[:space:]]+", preserve.case = TRUE)
primary.tokenized.corpus.bas
secondary.tokenized.corpus.haut
# contrastive analysis
clemens.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
# contrastive analysis
clemens.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
# contrastive analysis
clemens.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
# contrastive analysis
clemens.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
setwd("~/methal/methalV1/Rstylo/data4r/Lustig")
library(stylo)
# load corpus
primary.raw.corpus.bas <- load.corpus(files = "all", corpus.dir = "lustig", encoding = "UTF-8")
secondary.raw.corpus.haut <- load.corpus(files = "all", corpus.dir = "autres", encoding = "UTF-8")
# tokenizer
primary.tokenized.corpus.bas <- txt.to.words(primary.raw.corpus.bas, splitting.rule="[[:space:]]+", preserve.case = TRUE)
secondary.tokenized.corpus.haut <- txt.to.words(secondary.raw.corpus.haut, splitting.rule="[[:space:]]+", preserve.case = TRUE)
# contrastive analysis
lustig.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
secondary.tokenized.corpus.haut
primary.tokenized.corpus.bas
# contrastive analysis
lustig.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
warnings()
setwd("~/methal/methalV1/Rstylo/data4r/Greber")
library(stylo)
# load corpus
primary.raw.corpus.bas <- load.corpus(files = "all", corpus.dir = "greber", encoding = "UTF-8")
secondary.raw.corpus.haut <- load.corpus(files = "all", corpus.dir = "autres", encoding = "UTF-8")
# tokenizer
primary.tokenized.corpus.bas <- txt.to.words(primary.raw.corpus.bas, splitting.rule="[[:space:]]+", preserve.case = TRUE)
secondary.tokenized.corpus.haut <- txt.to.words(secondary.raw.corpus.haut, splitting.rule="[[:space:]]+", preserve.case = TRUE)
# contrastive analysis
greber.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
# contrastive analysis
greber.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
# contrastive analysis
greber.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
setwd("~/methal/methalV1/Rstylo/data4r/Riff")
library(stylo)
# load corpus
primary.raw.corpus.bas <- load.corpus(files = "all", corpus.dir = "riff", encoding = "UTF-8")
secondary.raw.corpus.haut <- load.corpus(files = "all", corpus.dir = "autres", encoding = "UTF-8")
primary.raw.corpus.bas
# tokenizer
primary.tokenized.corpus.bas <- txt.to.words(primary.raw.corpus.bas, splitting.rule="[[:space:]]+", preserve.case = TRUE)
secondary.tokenized.corpus.haut <- txt.to.words(secondary.raw.corpus.haut, splitting.rule="[[:space:]]+", preserve.case = TRUE)
primary.tokenized.corpus.bas
secondary.tokenized.corpus.haut
# contrastive analysis
riff.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
# contrastive analysis
riff.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
# contrastive analysis
riff.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
# contrastive analysis
riff.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
setwd("~/methal/methalV1/Rstylo/data4r/Horsch")
library(stylo)
# load corpus
primary.raw.corpus.bas <- load.corpus(files = "all", corpus.dir = "horsch", encoding = "UTF-8")
secondary.raw.corpus.haut <- load.corpus(files = "all", corpus.dir = "autres", encoding = "UTF-8")
# tokenizer
primary.tokenized.corpus.bas <- txt.to.words(primary.raw.corpus.bas, splitting.rule="[[:space:]]+", preserve.case = TRUE)
secondary.tokenized.corpus.haut <- txt.to.words(secondary.raw.corpus.haut, splitting.rule="[[:space:]]+", preserve.case = TRUE)
# contrastive analysis
horsch.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
# contrastive analysis
horsch.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
# contrastive analysis
horsch.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
setwd("~/methal/methalV1/Rstylo/data4r/Jost")
library(stylo)
# load corpus
primary.raw.corpus.bas <- load.corpus(files = "all", corpus.dir = "jost", encoding = "UTF-8")
secondary.raw.corpus.haut <- load.corpus(files = "all", corpus.dir = "autres", encoding = "UTF-8")
# tokenizer
primary.tokenized.corpus.bas <- txt.to.words(primary.raw.corpus.bas, splitting.rule="[[:space:]]+", preserve.case = TRUE)
secondary.tokenized.corpus.haut <- txt.to.words(secondary.raw.corpus.haut, splitting.rule="[[:space:]]+", preserve.case = TRUE)
# contrastive analysis
jost.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
# contrastive analysis
jost.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
# contrastive analysis
jost.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
setwd("~/methal/methalV1/Rstylo/data4r/EWeber")
library(stylo)
# load corpus
primary.raw.corpus.bas <- load.corpus(files = "all", corpus.dir = "emileweber", encoding = "UTF-8")
secondary.raw.corpus.haut <- load.corpus(files = "all", corpus.dir = "autres", encoding = "UTF-8")
# tokenizer
primary.tokenized.corpus.bas <- txt.to.words(primary.raw.corpus.bas, splitting.rule="[[:space:]]+", preserve.case = TRUE)
secondary.tokenized.corpus.haut <- txt.to.words(secondary.raw.corpus.haut, splitting.rule="[[:space:]]+", preserve.case = TRUE)
# contrastive analysis
ew.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
# contrastive analysis
ew.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
# contrastive analysis
ew.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
setwd("~/methal/methalV1/Rstylo/data4r/Bastian")
library(stylo)
# load corpus
primary.raw.corpus.bas <- load.corpus(files = "all", corpus.dir = "bastian", encoding = "UTF-8")
secondary.raw.corpus.haut <- load.corpus(files = "all", corpus.dir = "autres", encoding = "UTF-8")
# tokenizer
primary.tokenized.corpus.bas <- txt.to.words(primary.raw.corpus.bas, splitting.rule="[[:space:]]+", preserve.case = TRUE)
secondary.tokenized.corpus.haut <- txt.to.words(secondary.raw.corpus.haut, splitting.rule="[[:space:]]+", preserve.case = TRUE)
# contrastive analysis
bs.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
# contrastive analysis
bs.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
# contrastive analysis
bs.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
setwd("~/methal/methalV1/Rstylo/data4r/Stoskopf")
library(stylo)
# load corpus
primary.raw.corpus.bas <- load.corpus(files = "all", corpus.dir = "stoskopf", encoding = "UTF-8")
secondary.raw.corpus.haut <- load.corpus(files = "all", corpus.dir = "autres", encoding = "UTF-8")
# tokenizer
primary.tokenized.corpus.bas <- txt.to.words(primary.raw.corpus.bas, splitting.rule="[[:space:]]+", preserve.case = TRUE)
secondary.tokenized.corpus.haut <- txt.to.words(secondary.raw.corpus.haut, splitting.rule="[[:space:]]+", preserve.case = TRUE)
# contrastive analysis
s.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
# contrastive analysis
s.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
# contrastive analysis
s.zeta = oppose(primary.corpus = primary.tokenized.corpus.bas, secondary.corpus = secondary.tokenized.corpus.haut)
